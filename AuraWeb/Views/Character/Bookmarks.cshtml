@model AuraWeb.Models.CharacterBookmarksViewModel
@{
    ViewData["Title"] = "Bookmarks";
    ViewData["NavbarFormController"] = "Character";
    ViewData["NavbarFormAction"] = "Bookmarks";
}
<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark filter-container">
    <span class="navbar-brand filter-brand">@ViewData["Title"]</span>
    <button class="navbar-toggler" type="button" style="background: darkgray;"
            data-toggle="collapse"
            data-target="#optionsBar"
            aria-controls="optionsBar"
            aria-expanded="false"
            aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="optionsBar">
        <form asp-controller="@ViewData["NavbarFormController"]" asp-action="@ViewData["NavbarFormAction"]" method="get">
            <ul class="navbar-nav mr-auto">
                <li>
                    <select class="custom-select unset-border-radius unset-border transparent-bg-color" id="queryFolderInput" name="folder">
                        @if (Model.QueryFolder == "All")
                        {
                            <option value="All" selected>All Folders</option>
                        }
                        else
                        {
                            <option value="All">All Groups</option>
                        }
                        @foreach (string folder in Model.FolderNames)
                        {
                            @if (Model.QueryFolder == folder)
                            {
                                <option value="@folder" selected>
                                    @folder
                                </option>
                            }
                            else
                            {
                                <option value="@folder">
                                    @folder
                                </option>
                            }
                        }
                    </select>
                </li>
                <li>
                    @if (!String.IsNullOrWhiteSpace(Model.QueryName))
                    {
                        <input type="text" class="form-control unset-border-radius unset-border transparent-bg-color" placeholder="Name" aria-label="Name" aria-describedby="queryNameInput" name="name" value="@Model.QueryName">
                    }
                    else
                    {
                        <input type="text" class="form-control unset-border-radius unset-border transparent-bg-color" placeholder="Name" aria-label="Name" aria-describedby="queryNameInput" name="name">
                    }
                </li>
                <li>
                    <select class="custom-select unset-border-radius unset-border transparent-bg-color" id="queryViewInput" name="view">
                        <option value="Table" selected>Table View</option>
                    </select>
                </li>
                <li>
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Query</button>
                </li>
            </ul>
        </form>
    </div>
</nav>
<div class="row filter-compensator width-100 no-left-margin no-right-margin">
    @if (Model.View == "Table")
    {
        @Html.DisplayFor(x => x.Bookmarks, "BookmarksTable")
    }
</div>