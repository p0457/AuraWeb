@model AuraWeb.Models.ItemTypeInfoPageViewModel
@{
    ViewData["Title"] = Model.ItemType.Name;
}
<div class="row no-margin">
    <div class="col-sm-auto col-12 no-padding-sm-above bg-dark">
        <img src="~/IEC/Renders/@(Model.ItemType.Id).png" class="width-100" />
    </div>
    <div class="col-sm col-12 no-padding-sm-above">
        <!-- BASE INFO -->
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr class="bg-primary">
                    <th scope="col">Information</th>
                </tr>
            </thead>
        </table>
        <table class="table table-dark table-sm table-hover table-bordered no-margin">
            <tbody>
                <tr>
                    <th scope="row" class="col-auto">Id</th>
                    <td class="col-10">@Model.ItemType.Id</td>
                </tr>
                <tr>
                    <th scope="row" class="col-auto">Name</th>
                    <td class="col-10">@Model.ItemType.Name</td>
                </tr>
                <tr>
                    <th scope="row" class="col-auto">Group Category</th>
                    <td class="col-10">
                        <a asp-controller="ItemType"
                           asp-action="ItemTypes"
                           asp-route-groupCategoryName="@Model.ItemType.Group.Category.Name">
                            @Model.ItemType.Group.Category.Name
                        </a>
                    </td>
                </tr>
                <tr>
                    <th scope="row" class="col-auto">Group</th>
                    <td class="col-10">
                        <a asp-controller="ItemType"
                           asp-action="ItemTypes"
                           asp-route-groupName="@Model.ItemType.Group.Name">
                            @Model.ItemType.Group.Name
                        </a>
                    </td>
                </tr>
                @if (Model.ItemType.Race != null)
                {
                    <tr>
                        <th scope="row" class="col-auto">Race</th>
                        <td class="col-10">@Model.ItemType.Race.Name</td>
                    </tr>
                }
                <tr>
                    <th scope="row" class="col-auto">Description</th>
                    <td class="col-10">@Html.Raw(Model.ItemType.Description)</td>
                </tr>
            </tbody>
        </table>
        <!-- IN-GAME ACTIONS -->
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr class="bg-primary">
                    <th scope="col">In-Game</th>
                </tr>
            </thead>
        </table>
        <table class="table table-dark table-sm table-hover table-bordered no-margin">
            <tbody>
                <tr>
                    <th scope="row" class="col-auto">Open Info</th>
                    <td class="col-10">
                        <!-- TODO: Get away from a POST request by switching to a-href and a get -->
                        <form asp-controller="ItemType"
                              asp-action="ItemTypeInfoOpenInfoWindowForItemType"
                              method="post">
                            <input type="text" asp-for="@Model.OpenInfoModel.ItemTypeId" value="@Model.ItemTypeId" hidden />
                            <button type="submit">Submit</button>
                        </form>
                    </td>
                </tr>
                <tr>
                    <th scope="row" class="col-auto">Open Market Window</th>
                    <td class="col-10">
                        <!-- TODO: Get away from a POST request by switching to a-href and a get -->
                        <form asp-controller="ItemType"
                              asp-action="ItemTypeInfoOpenMarketWindowForItemType"
                              method="post">
                            <input type="text" asp-for="@Model.OpenMarketModel.ItemTypeId" value="@Model.ItemTypeId" hidden />
                            <button type="submit">Submit</button>
                        </form>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- SIZE INFO -->
    <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
        <thead>
            <tr class="bg-primary">
                <th scope="col">Size</th>
            </tr>
        </thead>
    </table>
    <table class="table table-dark table-sm table-hover table-bordered no-margin">
        <tbody>
            <tr>
                <th scope="row" class="col-auto">Mass</th>
                <td class="col-10">
                    @Html.DisplayFor(x => x.ItemType.Mass, "NumberValue")
                </td>
            </tr>
            <tr>
                <th scope="row" class="col-auto">Volume (Packaged)</th>
                <td class="col-10">
                    <span>
                        @Html.DisplayFor(x => x.ItemType.Volume, "NumberValue")
                    </span>
                    <span> (</span>
                    <span>
                        @Html.DisplayFor(x => x.ItemType_API.PackagedVolume, "NumberValueSingle")
                    </span>
                    <span>)</span>
                </td>
            </tr>
            <tr>
                <th scope="row" class="col-auto">Radius</th>
                <td class="col-10">
                    @Html.DisplayFor(x => x.ItemType_API.Radius, "NumberValueSingle")
                </td>
            </tr>
            <tr>
                <th scope="row" class="col-auto">Capacity</th>
                <td class="col-10">
                    @Html.DisplayFor(x => x.ItemType.Capacity, "NumberValue")
                </td>
            </tr>
            <tr>
                <th scope="row" class="col-auto">Portion Size</th>
                <td class="col-10">
                    @Model.ItemType.PortionSize
                </td>
            </tr>
        </tbody>
    </table>
    <!-- ATTRIBUTES -->
    @if (Model.ItemType.Attributes != null && Model.ItemType.Attributes.Count > 0)
    {
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr class="bg-primary">
                    <th scope="col">Attributes</th>
                </tr>
            </thead>
        </table>
        <table class="table table-dark table-sm table-hover table-bordered no-margin">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Category</th>
                    <th scope="col">Value</th>
                </tr>
            </thead>
            <tbody style="cursor: pointer;">
                @foreach (var attr in Model.ItemType.Attributes)
                {
                    <tr>
                        <td>
                            @if (!String.IsNullOrWhiteSpace(attr.DisplayName))
                            {
                                <span>@attr.DisplayName</span>
                            }
                            else
                            {
                                <span>@attr.Name</span>
                            }
                        </td>
                        <td>
                            @if (attr.Category != null)
                            {
                                <span>@attr.Category.Name</span>
                            }
                            else
                            {
                                <span>--</span>
                            }
                        </td>
                        <td>
                            @if (attr.ValueFloat != null)
                            {
                                @if (attr.Unit != null)
                                {
                                    <span>@attr.ValueFloat @attr.Unit.DisplayName</span>
                                }
                                else if (attr.Unit == null)
                                {
                                    <span>@attr.ValueFloat</span>
                                }
                            }
                            else if (attr.ValueInt != null)
                            {
                                @if (attr.Unit != null)
                                {
                                    <span>@attr.ValueInt @attr.Unit.DisplayName</span>
                                }
                                else if (attr.Unit == null)
                                {
                                    <span>@attr.ValueInt</span>
                                }
                            }
                            else
                            {
                                <span>--</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <!-- EFFECTS -->
    @if (Model.ItemType.Effects != null && Model.ItemType.Effects.Count > 0)
    {
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr class="bg-primary">
                    <th scope="col">Effects</th>
                </tr>
            </thead>
        </table>
        <table class="table table-dark table-sm table-hover table-bordered no-margin">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Pre</th>
                    <th scope="col">Post</th>
                </tr>
            </thead>
            <tbody style="cursor: pointer;">
                @foreach (var effect in Model.ItemType.Effects)
                {
                    <tr>
                        <td>
                            @if (!String.IsNullOrWhiteSpace(effect.DisplayName))
                            {
                                <span>@effect.DisplayName</span>
                            }
                            else
                            {
                                <span>@effect.Name</span>
                            }
                        </td>
                        <td>@effect.Description</td>
                        <td>@effect.PreExpression</td>
                        <td>@effect.PostExpression</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <!-- MARKET -->
    @if (Model.AveragePrice != null)
    {
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr class="bg-primary">
                    <th scope="col">Market</th>
                </tr>
            </thead>
        </table>
        <table class="table table-dark table-sm table-hover table-bordered no-margin">
            <thead>
                <tr>
                    <th scope="col">Market Group</th>
                    <th scope="col">Average Price</th>
                    <th scope="col">Adjusted Price</th>
                    <th scope="col">Last Updated</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row" class="col-auto">
                        @if (Model.ItemType.MarketGroup != null)
                        {
                            <span>@Model.ItemType.MarketGroup.Name</span>
                        }
                        else
                        {
                            <span>--</span>
                        }
                    </th>
                    <td>
                        @Html.DisplayFor(x => x.AveragePrice.AveragePrice, "ISKValue")
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.AveragePrice.AdjustedPrice, "ISKValue")
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.AveragePrice.Timestamp, "DateTime")
                    </td>
                </tr>
            </tbody>
        </table>
    }
    <!--BEST BUY -->
    @if (Model.BestBuyPrices != null && Model.BestBuyPrices.Count > 0)
    {
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr class="bg-primary">
                    <th scope="col">Best Buy Prices</th>
                </tr>
            </thead>
        </table>
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr>
                    <th scope="col">System</th>
                    <th scope="col">Range</th>
                    <th scope="col">Price</th>
                </tr>
            </thead>
            <tbody style="cursor: pointer;">
                @foreach (var marketPrice in Model.BestBuyPrices)
                {
                    <tr>
                        <th scope="row">@marketPrice.SystemName</th>
                        <td>@marketPrice.Range</td>
                        <td>
                            @Html.DisplayFor(x => marketPrice.Price, "ISKValue")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <!-- BEST SELL -->
    @if (Model.BestSellPrices != null && Model.BestSellPrices.Count > 0)
    {
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr class="bg-primary">
                    <th scope="col">Best Sell Prices</th>
                </tr>
            </thead>
        </table>
        <table class="table table-dark table-sm table-hover table-responsive-md no-margin">
            <thead>
                <tr>
                    <th scope="col">System</th>
                    <th scope="col">Range</th>
                    <th scope="col">Price</th>
                </tr>
            </thead>
            <tbody style="cursor: pointer;">
                @foreach (var marketPrice in Model.BestSellPrices)
                {
                    <tr>
                        <th scope="row">@marketPrice.SystemName</th>
                        <th>@marketPrice.Range</th>
                        <td>
                            @Html.DisplayFor(x => marketPrice.Price, "ISKValue")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>